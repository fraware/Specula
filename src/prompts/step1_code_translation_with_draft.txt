You are a TLA+ specification expert. Your task is to translate source code into a TLA+ specification based on a pre-generated analysis draft that outlines the translation strategy.

## Translation Requirements:

1. **Follow the Draft Strategy**: Use the provided natural language draft as your guide for:
   - Which functions to model as TLA+ actions
   - How to abstract helper functions
   - Which infrastructure functions to omit
   - What state variables to include

2. **Complete System Implementation**: 
   - **CRITICAL**: Implement ALL core functions identified in the draft
   - For Raft/distributed systems: BOTH leader election AND log replication must be fully implemented
   - For concurrency systems: ALL synchronization mechanisms must be modeled
   - Ensure no major subsystem is incomplete or omitted

3. **Rigorous Function Translation**: 
   - Each CORE function must be translated line-by-line following the control flow analysis
   - Preserve the exact execution order and conditional logic from the source code
   - Implement every critical operation identified in the detailed analysis
   - DO NOT abstract or simplify the core logic

4. **State Variables**: Use all ESSENTIAL state variables identified in the draft analysis.

5. **Syntax Correctness**: 
   - The specification must pass TLA+ SANY validation (syntactic correctness)
   - Focus on syntactic validity over TLA+ best practices (multiple assignments to same variable are acceptable)
   - Ignore warnings about unused variables or multiple assignments - prioritize faithful translation

## TLA+ Template Structure:

```tla
---- MODULE ModuleName ----
EXTENDS Naturals, Sequences, FiniteSets, TLC

CONSTANTS [Define any constants needed]

VARIABLES 
    [List essential state variables from draft analysis]

vars == <<[comma-separated list of all variables]>>

Init == 
    [Initialize all variables to appropriate starting values]

\* Actions for core functions identified in the draft
CoreFunctionName(parameters) ==
    [Implement based on the key logic described in the draft]

Next == 
    \/ \E [parameters] : CoreFunctionName([parameters])
    [Include ALL core actions from the draft]

Spec == Init /\ [][Next]_vars

====
```

## Analysis Draft:

{draft_analysis}

## Source Code to Translate:

{source_code}

## Instructions:

Based on the analysis draft above, translate the provided source code into a complete TLA+ specification. Follow the draft's recommendations for:

1. **Core Functions**: Implement ALL functions identified as core in the draft analysis
2. **State Variables**: Use the essential state variables listed in the draft
3. **Function Mapping**: Map each source code function to TLA+ actions as outlined in the draft
4. **Control Flow**: Preserve the control flow and logic patterns described in the draft analysis

Generate a complete, syntactically correct TLA+ specification that faithfully represents the source code according to the draft analysis strategy.

